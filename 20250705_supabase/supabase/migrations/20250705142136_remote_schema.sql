

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."bombii_history" (
    "id" bigint NOT NULL,
    "team_id" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);


ALTER TABLE "public"."bombii_history" OWNER TO "postgres";


CREATE OR REPLACE VIEW "public"."bombii_counts" WITH ("security_invoker"='on') AS
 SELECT "bombii_history"."team_id",
    "count"(*) AS "count"
   FROM "public"."bombii_history"
  GROUP BY "bombii_history"."team_id"
  ORDER BY "bombii_history"."team_id";


ALTER TABLE "public"."bombii_counts" OWNER TO "postgres";


ALTER TABLE "public"."bombii_history" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."bombii_history_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."goal_stations" (
    "goal_station_id" bigint NOT NULL,
    "station_id" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'Asia/Tokyo'::"text") NOT NULL,
    "updated_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'Asia/Tokyo'::"text") NOT NULL
);


ALTER TABLE "public"."goal_stations" OWNER TO "postgres";


COMMENT ON TABLE "public"."goal_stations" IS '到着駅を登録する';



ALTER TABLE "public"."goal_stations" ALTER COLUMN "goal_station_id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."goal_stations_goal_station_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."transit_stations" (
    "transit_station_id" bigint NOT NULL,
    "team_id" "text" NOT NULL,
    "station_id" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'Asia/Tokyo'::"text") NOT NULL,
    "updated_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'Asia/Tokyo'::"text") NOT NULL
);


ALTER TABLE "public"."transit_stations" OWNER TO "postgres";


COMMENT ON TABLE "public"."transit_stations" IS '経由駅を登録する';



CREATE OR REPLACE VIEW "public"."latest_transit_stations" WITH ("security_invoker"='on') AS
 SELECT DISTINCT ON ("transit_stations"."team_id") "transit_stations"."transit_station_id",
    "transit_stations"."team_id",
    "transit_stations"."station_id",
    "transit_stations"."created_at",
    "transit_stations"."updated_at"
   FROM "public"."transit_stations"
  WHERE ("transit_stations"."team_id" = ANY (ARRAY['teamA'::"text", 'teamB'::"text", 'teamC'::"text", 'teamD'::"text"]))
  ORDER BY "transit_stations"."team_id", "transit_stations"."created_at" DESC;


ALTER TABLE "public"."latest_transit_stations" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."points" (
    "point_id" bigint NOT NULL,
    "team_id" "text" NOT NULL,
    "point" bigint NOT NULL,
    "is_charged" boolean DEFAULT false NOT NULL,
    "created_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'Asia/Tokyo'::"text") NOT NULL,
    "updated_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'Asia/Tokyo'::"text") NOT NULL
);


ALTER TABLE "public"."points" OWNER TO "postgres";


COMMENT ON TABLE "public"."points" IS 'ポイントを管理する';



ALTER TABLE "public"."points" ALTER COLUMN "point_id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."points_point_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."stations" (
    "station_id" "text" NOT NULL,
    "station_name" "text" NOT NULL,
    "is_mission_set" boolean DEFAULT false NOT NULL,
    "kana" "text"
);


ALTER TABLE "public"."stations" OWNER TO "postgres";


COMMENT ON TABLE "public"."stations" IS '駅一覧';



CREATE TABLE IF NOT EXISTS "public"."teams" (
    "team_id" "text" NOT NULL,
    "team_name" "text" NOT NULL
);


ALTER TABLE "public"."teams" OWNER TO "postgres";


COMMENT ON TABLE "public"."teams" IS 'チーム一覧';



ALTER TABLE "public"."transit_stations" ALTER COLUMN "transit_station_id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."transit_stations_transit_station_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."bombii_history"
    ADD CONSTRAINT "bombii_history_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."goal_stations"
    ADD CONSTRAINT "goal_stations_pkey" PRIMARY KEY ("goal_station_id");



ALTER TABLE ONLY "public"."points"
    ADD CONSTRAINT "points_pkey" PRIMARY KEY ("point_id");



ALTER TABLE ONLY "public"."stations"
    ADD CONSTRAINT "stations_pkey" PRIMARY KEY ("station_id");



ALTER TABLE ONLY "public"."teams"
    ADD CONSTRAINT "teams_pkey" PRIMARY KEY ("team_id");



ALTER TABLE ONLY "public"."teams"
    ADD CONSTRAINT "teams_team_id_key" UNIQUE ("team_id");



ALTER TABLE ONLY "public"."transit_stations"
    ADD CONSTRAINT "transit_stations_pkey" PRIMARY KEY ("transit_station_id");


-- 通知トリガーは別途設定
-- CREATE OR REPLACE TRIGGER "notify to discord" AFTER INSERT ON "public"."transit_stations" FOR EACH ROW EXECUTE FUNCTION "supabase_functions"."http_request"('https://p1sjp7qtkb.execute-api.ap-northeast-1.amazonaws.com/default/send_from_supabase_to_discord_for_realmomotetsu', 'POST', '{"Content-type":"application/json"}', '{}', '5000');



ALTER TABLE ONLY "public"."bombii_history"
    ADD CONSTRAINT "bombii_history_team_id_fkey" FOREIGN KEY ("team_id") REFERENCES "public"."teams"("team_id");



ALTER TABLE ONLY "public"."goal_stations"
    ADD CONSTRAINT "goal_stations_station_id_fkey" FOREIGN KEY ("station_id") REFERENCES "public"."stations"("station_id");



ALTER TABLE ONLY "public"."points"
    ADD CONSTRAINT "points_team_id_fkey" FOREIGN KEY ("team_id") REFERENCES "public"."teams"("team_id");



ALTER TABLE ONLY "public"."transit_stations"
    ADD CONSTRAINT "transit_stations_station_id_fkey" FOREIGN KEY ("station_id") REFERENCES "public"."stations"("station_id");



ALTER TABLE ONLY "public"."transit_stations"
    ADD CONSTRAINT "transit_stations_team_id_fkey" FOREIGN KEY ("team_id") REFERENCES "public"."teams"("team_id");



CREATE POLICY "Enable insert for all users" ON "public"."goal_stations" FOR INSERT TO "authenticated", "anon" WITH CHECK (true);



CREATE POLICY "Enable insert for all users" ON "public"."points" FOR INSERT TO "authenticated", "anon" WITH CHECK (true);



CREATE POLICY "Enable insert for all users" ON "public"."transit_stations" FOR INSERT TO "authenticated", "anon" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."bombii_history" FOR INSERT TO "authenticated", "anon" WITH CHECK (true);



CREATE POLICY "Enable read access for all users" ON "public"."bombii_history" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."goal_stations" FOR SELECT TO "authenticated", "anon" USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."points" FOR SELECT TO "authenticated", "anon" USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."stations" FOR SELECT TO "authenticated", "anon" USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."teams" FOR SELECT TO "authenticated", "anon" USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."transit_stations" FOR SELECT TO "authenticated", "anon" USING (true);



CREATE POLICY "Enable update for all users" ON "public"."points" FOR UPDATE TO "authenticated", "anon" USING (true) WITH CHECK (true);



ALTER TABLE "public"."bombii_history" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."goal_stations" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."points" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."stations" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."teams" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."transit_stations" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";





GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";












































































































































































































GRANT ALL ON TABLE "public"."bombii_history" TO "anon";
GRANT ALL ON TABLE "public"."bombii_history" TO "authenticated";
GRANT ALL ON TABLE "public"."bombii_history" TO "service_role";



GRANT ALL ON TABLE "public"."bombii_counts" TO "anon";
GRANT ALL ON TABLE "public"."bombii_counts" TO "authenticated";
GRANT ALL ON TABLE "public"."bombii_counts" TO "service_role";



GRANT ALL ON SEQUENCE "public"."bombii_history_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."bombii_history_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."bombii_history_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."goal_stations" TO "anon";
GRANT ALL ON TABLE "public"."goal_stations" TO "authenticated";
GRANT ALL ON TABLE "public"."goal_stations" TO "service_role";



GRANT ALL ON SEQUENCE "public"."goal_stations_goal_station_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."goal_stations_goal_station_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."goal_stations_goal_station_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."transit_stations" TO "anon";
GRANT ALL ON TABLE "public"."transit_stations" TO "authenticated";
GRANT ALL ON TABLE "public"."transit_stations" TO "service_role";



GRANT ALL ON TABLE "public"."latest_transit_stations" TO "anon";
GRANT ALL ON TABLE "public"."latest_transit_stations" TO "authenticated";
GRANT ALL ON TABLE "public"."latest_transit_stations" TO "service_role";



GRANT ALL ON TABLE "public"."points" TO "anon";
GRANT ALL ON TABLE "public"."points" TO "authenticated";
GRANT ALL ON TABLE "public"."points" TO "service_role";



GRANT ALL ON SEQUENCE "public"."points_point_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."points_point_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."points_point_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."stations" TO "anon";
GRANT ALL ON TABLE "public"."stations" TO "authenticated";
GRANT ALL ON TABLE "public"."stations" TO "service_role";



GRANT ALL ON TABLE "public"."teams" TO "anon";
GRANT ALL ON TABLE "public"."teams" TO "authenticated";
GRANT ALL ON TABLE "public"."teams" TO "service_role";



GRANT ALL ON SEQUENCE "public"."transit_stations_transit_station_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."transit_stations_transit_station_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."transit_stations_transit_station_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
